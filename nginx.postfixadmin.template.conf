#    Copyright 2014 Chris Caron <lead2gold@gmail.com>
#
#    This is free software: you can redistribute it and/or modify it under the
#    terms of the GNU General Public License as published by the Free Software
#    Foundation, either version 3 of the License, or (at your option) any later
#    version.
#
#    This file is distributed in the hope that it will be useful, but WITHOUT
#    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#    FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
#    more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this file. If not, see http://www.gnu.org/licenses/.
###############################################################################
#
# This is just a sample configuration you can use to host postfixadmin
# on an NginX server.
#
# For more information visit http://nuxref.com
#
# This configuration assumes you've configured your NginX's master
# configuration (usually /etc/nginx/nginx.conf) to include a directory such
# as /etc/nginx/conf.d to which you can just drop this file in.
#
# hence as the very last part of the http {} section in your
# /etc/nginx/nginx.conf add the following:
#
#   http {
#     # leave existing content in place
#     ... existing content ...
#
#     # on the last line of this section add the following if it's not
#     # already present:
#     include /etc/nginx/conf.d/*.conf;
#   }
#
#?     # Directory to store our configuration in (if its not already there).
#?     [ ! -d /etc/nginx/conf.d ] && \
#?         mkdir -p /etc/nginx/conf.d
#?
#?     # Define your variables
#?     DOMAIN=nginx.com
#?
#?     sed -e "/^#?/d" \
#?         -e "s/%DOMAIN%/$DOMAIN/g" \
#?             nginx.postfixadmin.template.conf > \
#?                 /etc/nginx/conf.d/postfixadmin.conf
server {
   ## Non-Secure Simply preforms redirect to Secure
   listen 80;
   server_name  postfixadmin.*;

   if ($host ~* www\.(.*)) {
     # if www prefix is present, strip it off before
     # redirecting to secure site
     set $host_without_www $1;
     rewrite ^(.*)$ https://$host_without_www$1 permanent;
   }

   ## Always redirect to secure site
   rewrite ^/(.*) https://$host/$1 permanent;
}

server {
   listen       443;
   server_name  postfixadmin.*;
   root   /usr/share/postfixadmin;

   # Extra Protection
   #auth_basic "Restricted";
   #auth_basic_user_file  /etc/nginx/mail.htpasswd;

   ssl on;
   ssl_certificate /etc/pki/tls/certs/%DOMAIN%.crt;
   ssl_certificate_key /etc/pki/tls/private/%DOMAIN%.key;

   ssl_session_timeout  5m;
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
   ssl_prefer_server_ciphers on;
   ssl_session_cache  builtin:1000  shared:SSL:10m;

   access_log  /var/log/nginx/postfixadmin.access.log  main;
   error_log  /var/log/nginx/postfixadmin.error.log;

   location / {
       index  index.html index.htm index.php;
   }

   error_page  404              /404.html;
   location = /404.html {
       root   /usr/share/nginx/html;
   }

   # redirect server error pages to the static page /50x.html
   #
   error_page   500 502 503 504  /50x.html;
   location = /50x.html {
       root   /usr/share/nginx/html;
   }

   # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
   #
   location ~ \.php$ {
      try_files $uri = 404;
       fastcgi_pass   127.0.0.1:9000;
       fastcgi_index  index.php;
       fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
       include        fastcgi_params;
   }

   # deny all hidden files
   # concurs with nginx's one
   location ~ /\.[^/]* {
       deny  all;
   }
}
